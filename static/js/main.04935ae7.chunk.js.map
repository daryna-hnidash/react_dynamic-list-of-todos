{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FILTER","TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","onSelectHandler","TodoFilter","setFilter","query","setQuery","onChange","e","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","selecledUser","setSelectedUser","useEffect","userId","catch","Error","href","email","name","App","setTodos","loader","setLoader","filter","finally","filteredByQueryTodos","useMemo","toLowerCase","includes","visiableTodos","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,mECSCC,EAA4B,SAAC,GAIpC,IAFFC,EAEC,EAFDA,MAAOC,EAEN,EAFMA,gBAAiBC,EAEvB,EAFuBA,aAO1B,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAAI,UAAQ,OAAOF,UAAU,GAA7B,UACE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WAEF,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAIrB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWK,IACT,CAAE,mBAAoBH,EAAKE,WAC3B,CAAE,mBAAoBF,EAAKE,YAH/B,SAMGF,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBA9CC,SAACN,GACvBJ,EAAgBI,GA6CWO,CAAgBP,IAJjC,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWK,IACZ,MACA,CAAE,eAAgBN,IAAiBG,GACnC,CAAE,WAAYH,IAAiBG,eA/BJA,EAAKC,c,SDnCxCR,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KEQL,IAAMe,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,UAAWC,EACP,EADOA,MAAOC,EACd,EADcA,SAElB,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,SAAU,SAACC,GAAD,OAAOJ,EAAUI,EAAEC,OAAOC,QAFtC,UAIE,wBAAQA,MAAOtB,EAAOuB,IAAtB,iBACA,wBAAQD,MAAOtB,EAAOwB,OAAtB,oBACA,wBAAQF,MAAOtB,EAAOyB,UAAtB,8BAKN,oBAAGpB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVqB,YAAY,YACZJ,MAAOL,EACPE,SAAU,SAACC,GAAD,OAAOF,EAASE,EAAEC,OAAOC,UAErC,sBAAMjB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdY,GACC,sBAAMZ,UAAU,gBAAgBsB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRhB,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMK,EAAS,gBChC/B,SAASW,EAAOC,GAErB,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,ICrBMC,EAAmB,kBAC9B,qBAAKnC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCMNoC,EAA6B,SAAC,GAA+B,IAA7BlC,EAA4B,EAA5BA,KAAMJ,EAAsB,EAAtBA,gBACjD,EAAwCuC,mBAAsB,MAA9D,mBAAOC,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WFYW,IAACC,KEXZvC,EAAKuC,OFW0BjB,EAAG,iBAAiBiB,KEVxDV,KAAKQ,GACLG,OAAM,WAEL,MADAH,EAAgB,MACV,IAAII,MAAM,iCAEnB,CAACzC,IAOJ,OACE,sBAAKF,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbsC,EAGA,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYE,EAAKC,MAIjB,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QA1BU,WACpB+B,EAAgB,MAChBzC,EAAgB,YA4BV,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGE,EAAKI,QAGR,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UACGE,EAAKE,UACF,wBAAQJ,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAG4C,KAAI,iBAAYN,EAAaO,OAAhC,SACGP,EAAaQ,gBAjCtB,cAAC,EAAD,QCpBKC,EAAgB,WAC3B,MAA0BV,mBAAiB,IAA3C,mBAAOxC,EAAP,KAAcmD,EAAd,KACA,EAA4BX,oBAAS,GAArC,mBAAOY,EAAP,KAAeC,EAAf,KACA,EAAwCb,mBAAsB,MAA9D,mBAAOtC,EAAP,KAAqBD,EAArB,KACA,EAA4BuC,mBAAiB1C,EAAOuB,KAApD,mBAAOiC,EAAP,KAAexC,EAAf,KACA,EAA0B0B,mBAAS,IAAnC,mBAAOzB,EAAP,KAAcC,EAAd,KAEA2B,qBAAU,WACRU,GAAU,GHGgB1B,EAAY,UGDnCO,KAAKiB,GACLN,OAAM,WAEL,MADAM,EAAS,IACH,IAAIL,MAAM,+BAEjBS,SAAQ,kBAAMF,GAAU,QAC1B,IAEH,IAAMG,EAA+BC,mBAAQ,WAC3C,OAAOzD,EACJsD,QAAQ,SAAAjD,GAAI,OAAIA,EAAKI,MAAMiD,cAAcC,SAAS5C,EAAM2C,oBAC1D,CAAC1D,EAAOe,IAEL6C,EAAwBH,mBAAQ,WACpC,OAAQH,GACN,KAAKxD,EAAOwB,OACV,OAAOkC,EAAqBF,QAAQ,SAAAjD,GAAI,OAAIA,EAAKE,aAEnD,KAAKT,EAAOyB,UACV,OAAOiC,EAAqBF,QAAQ,SAAAjD,GAAI,OAAKA,EAAKE,aAEpD,KAAKT,EAAOuB,IACZ,QACE,OAAOmC,KAEV,CAACF,EAAQE,IAEZ,OACE,qCACE,qBAAKrD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYW,UAAWA,EAAWC,MAAOA,EAAOC,SAAUA,MAG5D,qBAAKb,UAAU,QAAf,SACGiD,EACG,cAAC,EAAD,IACA,cAAC,EAAD,CAAUpD,MAAO4D,EAAe3D,gBAAiBA,EAAiBC,aAAcA,cAM1FkD,GAAUlD,GACP,cAAC,EAAD,CAAWG,KAAMH,EAAcD,gBAAiBA,QCpE3D4D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.04935ae7.chunk.js","sourcesContent":["export enum FILTER {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (u: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos, setSelectedTodo, selectedTodo,\n  },\n) => {\n  const onSelectHandler = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-success': todo.completed },\n                  { 'has-text-danger': !todo.completed },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectHandler(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye-slash': selectedTodo === todo },\n                    { 'fa-eye': !(selectedTodo === todo) },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FILTER } from '../../types/Filter';\n\ntype Props = {\n  setFilter: (f: string) => void,\n  query: string,\n  setQuery: (s: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter, query, setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value={FILTER.ALL}>All</option>\n            <option value={FILTER.ACTIVE}>Active</option>\n            <option value={FILTER.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  setSelectedTodo: (v: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setSelectedTodo }) => {\n  const [selecledUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setSelectedUser)\n      .catch(() => {\n        setSelectedUser(null);\n        throw new Error('Server is not responding');\n      });\n  }, [todo]);\n\n  const onCloseHanler = () => {\n    setSelectedUser(null);\n    setSelectedTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selecledUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseHanler}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${selecledUser.email}`}>\n                {selecledUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FILTER } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<string>(FILTER.ALL);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoader(true);\n    getTodos()\n      .then(setTodos)\n      .catch(() => {\n        setTodos([]);\n        throw new Error('Server is not responding');\n      })\n      .finally(() => setLoader(false));\n  }, []);\n\n  const filteredByQueryTodos: Todo[] = useMemo(() => {\n    return todos\n      .filter((todo => todo.title.toLowerCase().includes(query.toLowerCase())));\n  }, [todos, query]);\n\n  const visiableTodos: Todo[] = useMemo(() => {\n    switch (filter) {\n      case FILTER.ACTIVE:\n        return filteredByQueryTodos.filter((todo => todo.completed));\n\n      case FILTER.COMPLETED:\n        return filteredByQueryTodos.filter((todo => !todo.completed));\n\n      case FILTER.ALL:\n      default:\n        return filteredByQueryTodos;\n    }\n  }, [filter, filteredByQueryTodos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setFilter={setFilter} query={query} setQuery={setQuery} />\n            </div>\n\n            <div className=\"block\">\n              {loader\n                ? <Loader />\n                : <TodoList todos={visiableTodos} setSelectedTodo={setSelectedTodo} selectedTodo={selectedTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!loader && selectedTodo\n        && <TodoModal todo={selectedTodo} setSelectedTodo={setSelectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}