{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","onSelectHandler","TodoFilter","filter","setFilter","query","setQuery","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","Loader","TodoModal","useState","selecledUser","setSelectedUser","useEffect","userId","href","email","name","App","setTodos","visiableTodos","setVisiableTodos","loader","setLoader","finally","filteredByQueryTodos","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82826e3e.chunk.js","sourcesContent":["import { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (u: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos, setSelectedTodo, selectedTodo,\n  },\n) => {\n  const onSelectHandler = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              {}\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectHandler(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    `far ${selectedTodo === todo\n                      ? 'fa-eye-slash'\n                      : 'fa-eye'}`\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  filter: string,\n  setFilter: (f: string) => void,\n  query: string,\n  setQuery: (s: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter, setFilter, query, setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  setSelectedTodo: (v: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setSelectedTodo }) => {\n  const [selecledUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setSelectedUser);\n  }, [todo]);\n\n  const onCloseHanler = () => {\n    setSelectedUser(null);\n    setSelectedTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selecledUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseHanler}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${selecledUser.email}`}>\n                {selecledUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visiableTodos, setVisiableTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  useEffect(() => {\n    setLoader(true);\n    getTodos()\n      .then(setVisiableTodos)\n      .finally(() => setLoader(false));\n  }, []);\n\n  useEffect(() => {\n    const filteredByQueryTodos = todos.filter((todo => todo.title.includes(query)));\n\n    switch (filter) {\n      case 'active':\n        setVisiableTodos(filteredByQueryTodos.filter((todo => todo.completed)));\n        break;\n\n      case 'completed':\n        setVisiableTodos(filteredByQueryTodos.filter((todo => !todo.completed)));\n        break;\n\n      case 'all':\n      default:\n        setVisiableTodos(filteredByQueryTodos);\n        break;\n    }\n  }, [filter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={filter} setFilter={setFilter} query={query} setQuery={setQuery} />\n            </div>\n\n            <div className=\"block\">\n              {loader\n                ? <Loader />\n                : <TodoList todos={visiableTodos} setSelectedTodo={setSelectedTodo} selectedTodo={selectedTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!loader && selectedTodo\n        && <TodoModal todo={selectedTodo} setSelectedTodo={setSelectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}